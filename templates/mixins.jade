

mixin form_field(field, placeholder="", type=None)
	.form-group(class=('has-error' if field.errors else ''))
		= field.label(class="control-label")
		|
		if type
			!= field(class="form-control", placeholder=placeholder, type=type)
		else
			!= field(class="form-control", placeholder=placeholder)
		+formerrors(field)


mixin form_field_raw(field, input)
	.form-group(class=('has-error' if field.errors else ''))
		= field.label(class="control-label")
		!= input
		+formerrors(field)


mixin form_select(field, choices)
	.form-group(class=('has-error' if field.errors else ''))
		= field.label(class="control-label")
		select(name=field.name, class="form-control")
			for value, text in choices
				if value == field.data
					option(value=value, selected=True)= text
				else
					option(value=value)= text
		+formerrors(field)

//- mixin form_select_language(field, choices)
//- 	.form-group(class=('has-error' if field.errors else ''))
//- 		= field.label(class="control-label")
//- 		select(name=field.name, class="form-control")
//- 			for code, name in choices
//- 				option(value=code, style="background-image: url('/static/images/flag-icons/#{ code }.png')")= name
//- 		+formerrors(field)

mixin formerrors(field)
	ul.errors
		for error in field.errors
			li= error


mixin form_submit(value="Submit")
	.form-group.form-submit
		input.btn.btn-primary(type="submit", value=value)


mixin grouped_columned_vocab_list(groups)
	ul.vocab-list.grouped.columned
		for key, group in groups
			li.heading= key
			for word in group
				li(data-id=word.id)= word.reading


mixin simple_vocab_list(words)
	ul.vocab-list.simple
		for word in words
			li(data-id=word.id)= word.reading


mixin vocab_progress_bar(stats)
	.vocab-progress-bar
		.partition.known(style="width: #{ "%2f%%"|format(stats.percents.known) }")
		.partition.learning(style="width: #{ "%2f%%"|format(stats.percents.learning) }")
		//- .partition.other(style="width: #{ "%2f%%"|format(100 - stats.percents.known - stats.percents.learning) }")


mixin vocab_list(words)
	if words|length > 100
		+grouped_columned_vocab_list(formatting.alpha_headings(words))
	else
		+simple_vocab_list(words)


mixin annotated_vocab_word(a_word, reading=None)
	if reading
		- var text = reading
	elif a_word.reading
		- var text = a_word.reading
	else
		- var text = a_word.word.lemma
	if a_word.rating > 0 and util.now() > a_word.srs_next_repetition
		li.word.due(data-group-label=a_word.label, data-lemma=a_word.word.lemma, data-rating=a_word.rating|int)
			//- div.due-marker
				//- = a_word.srs_next_repetition
			= text
	else
		li.word(data-group-label=a_word.label, data-lemma=a_word.word.lemma, data-rating=a_word.rating|int)
			= text

